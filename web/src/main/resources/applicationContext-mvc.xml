<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns= "http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd ">

    <!-- 声明@RequestMapping、@RequestBody、@ResponseBody等，该配置默认加载很多的参数绑定方法，比如json转换解析器等 -->
    <mvc:annotation-driven />

    <!-- SpringMvc子容器中只注册@Controller注解的bean -->
    <context:component-scan base-package="com.my" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- spring mvc 的两种视图解析器
    InternalResourceViewResolver：这是一个最常用的解析器。通常使用它指定渲染对象为jsp页面
    FreeMarkerViewResolver：这就是Spring与Freemarker整合需要用到的解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--配置拦截器, 多个拦截器,顺序执行。当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/cmmember/**"/>-->

            <!--<bean class="com.my.interceptor.LoginInterceptor">-->
                <!--<property name="excludeUrls">-->
                    <!--<list>-->
                        <!--<value>memlogincenter.jhtml</value>-->
                    <!--</list>-->
                <!--</property>-->
            <!--</bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
</beans>